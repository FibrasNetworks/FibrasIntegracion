# Generated by Django 3.0.3 on 2020-04-20 15:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_type', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('deprecated', models.BooleanField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=64)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('last_time_entries_checked', models.DateTimeField(blank=True, null=True)),
                ('reconcile', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountAccountTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_account_account_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountFinancialReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_account_financial_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountFinancialReportType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_account_financial_report_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicability', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('jurisdiction_code', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'account_account_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTagAccountTaxTemplateRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_account_tag_account_tax_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTaxDefaultRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_account_tax_default_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('reconcile', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('note', models.TextField(blank=True, null=True)),
                ('nocreate', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_account_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTemplateAccountTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_account_template_account_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTemplateTaxRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_account_template_tax_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('note', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('include_initial_balance', models.BooleanField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'account_account_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountTypeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_account_type_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAgedTrialBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('period_length', models.IntegerField()),
                ('date_from', models.DateField(blank=True, null=True)),
                ('result_selection', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'account_aged_trial_balance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAgedTrialBalanceAccountJournalRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_aged_trial_balance_account_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('account_type', models.CharField(max_length=20)),
                ('use_tasks', models.BooleanField(blank=True, null=True)),
                ('recurring_invoicing_type', models.CharField(blank=True, max_length=20, null=True)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('recurring_invoices', models.BooleanField(blank=True, null=True)),
                ('recurring_next_date', models.DateField(blank=True, null=True)),
                ('recurring_interval', models.IntegerField(blank=True, null=True)),
                ('recurring_rule_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_analytic_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticAccountAccountInvoiceRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_analytic_account_account_invoice_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticAccountTagRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_analytic_account_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticChart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_analytic_chart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticInvoiceLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.TextField()),
                ('discount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_unit', models.FloatField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.FloatField()),
            ],
            options={
                'db_table': 'account_analytic_invoice_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('unit_amount', models.FloatField(blank=True, null=True)),
                ('date', models.DateField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('code', models.CharField(blank=True, max_length=8, null=True)),
                ('ref', models.CharField(blank=True, max_length=20, null=True)),
                ('amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'account_analytic_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticLineTagRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_analytic_line_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAnalyticTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_analytic_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBalanceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('display_account', models.CharField(max_length=20)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'account_balance_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBalanceReportJournalRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_balance_report_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankAccountsWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('acc_name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('account_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_bank_accounts_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('date_done', models.DateTimeField(blank=True, null=True)),
                ('balance_start', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(max_length=20)),
                ('total_entry_encoding', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField()),
                ('difference', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('balance_end', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('balance_end_real', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'account_bank_statement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatementCashbox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_bank_statement_cashbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatementClosebalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_bank_statement_closebalance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatementImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('data_file', models.BinaryField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_bank_statement_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatementImportJournalCreation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_bank_statement_import_journal_creation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBankStatementLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('partner_name', models.CharField(blank=True, max_length=20, null=True)),
                ('ref', models.CharField(blank=True, max_length=20, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField()),
                ('amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('unique_import_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
            ],
            options={
                'db_table': 'account_bank_statement_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCashboxLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('coin_value', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'account_cashbox_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountChangeCurrency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('currency_rate', models.FloatField()),
            ],
            options={
                'db_table': 'account_change_currency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountChartTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_account_code_prefix', models.CharField(blank=True, max_length=5, null=True)),
                ('cash_account_code_prefix', models.CharField(blank=True, max_length=5, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('visible', models.BooleanField(blank=True, null=True)),
                ('complete_tax_set', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('use_anglo_saxon', models.BooleanField(blank=True, null=True)),
                ('code_digits', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('localization', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_chart_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('number', models.IntegerField()),
                ('issue_date', models.DateField()),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(max_length=20)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('owner_vat', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_check',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCheckAccountPaymentRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_check_account_payment_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCheckActionWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('action_type', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'account_check_action_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCheckbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_check_subtype', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('numerate_on_printing', models.BooleanField(blank=True, null=True)),
                ('range_to', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('block_manual_number', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_checkbook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCheckOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField()),
                ('operation', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'account_check_operation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonAccountReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('display_account', models.CharField(max_length=20)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'account_common_account_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonAccountReportAccountJournalRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_common_account_report_account_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonPartnerReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('result_selection', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'account_common_partner_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonPartnerReportAccountJournalRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_common_partner_report_account_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'account_common_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountCommonReportAccountJournalRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_common_report_account_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('module_account_asset', models.BooleanField(blank=True, null=True)),
                ('module_account_accountant', models.BooleanField(blank=True, null=True)),
                ('module_account_plaid', models.BooleanField(blank=True, null=True)),
                ('complete_tax_set', models.BooleanField(blank=True, null=True)),
                ('module_account_bank_statement_import_qif', models.BooleanField(blank=True, null=True)),
                ('module_account_budget', models.BooleanField(blank=True, null=True)),
                ('group_multi_currency', models.BooleanField(blank=True, null=True)),
                ('group_proforma_invoices', models.BooleanField(blank=True, null=True)),
                ('has_chart_of_accounts', models.BooleanField(blank=True, null=True)),
                ('has_default_company', models.BooleanField(blank=True, null=True)),
                ('purchase_tax_rate', models.FloatField(blank=True, null=True)),
                ('module_account_bank_statement_import_ofx', models.BooleanField(blank=True, null=True)),
                ('group_analytic_accounting', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('sale_tax_rate', models.FloatField(blank=True, null=True)),
                ('module_account_batch_deposit', models.BooleanField(blank=True, null=True)),
                ('module_account_yodlee', models.BooleanField(blank=True, null=True)),
                ('module_account_tax_cash_basis', models.BooleanField(blank=True, null=True)),
                ('module_account_sepa', models.BooleanField(blank=True, null=True)),
                ('module_account_reports', models.BooleanField(blank=True, null=True)),
                ('module_l10n_us_check_printing', models.BooleanField(blank=True, null=True)),
                ('module_account_reports_followup', models.BooleanField(blank=True, null=True)),
                ('module_payment_paypal', models.BooleanField(blank=True, null=True)),
                ('module_payment_buckaroo', models.BooleanField(blank=True, null=True)),
                ('module_payment_adyen', models.BooleanField(blank=True, null=True)),
                ('module_payment_ogone', models.BooleanField(blank=True, null=True)),
                ('module_payment_transfer', models.BooleanField(blank=True, null=True)),
                ('sale_use_documents', models.BooleanField(blank=True, null=True)),
                ('purchase_use_documents', models.BooleanField(blank=True, null=True)),
                ('group_analytic_account_for_sales', models.BooleanField(blank=True, null=True)),
                ('group_analytic_account_for_purchases', models.BooleanField(blank=True, null=True)),
                ('group_choose_payment_type', models.BooleanField(blank=True, null=True)),
                ('group_pay_now_vendor_invoices', models.BooleanField(blank=True, null=True)),
                ('group_pay_now_customer_invoices', models.BooleanField(blank=True, null=True)),
                ('group_account_use_financial_amounts', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountDebtReportWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('secondary_currency', models.BooleanField(blank=True, null=True)),
                ('historical_full', models.BooleanField(blank=True, null=True)),
                ('company_type', models.CharField(blank=True, max_length=20, null=True)),
                ('show_invoice_detail', models.BooleanField(blank=True, null=True)),
                ('result_selection', models.CharField(max_length=20)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('financial_amounts', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_debt_report_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountDocLetResponsabilityIssuerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_doc_let_responsability_issuer_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountDocLetResponsabilityReceptorRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_doc_let_responsability_receptor_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountDocumentLetter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('taxes_included', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_document_letter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountDocumentLetterResponsabilityIssuerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_document_letter_responsability_issuer_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountDocumentLetterResponsabilityReceptorRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_document_letter_responsability_receptor_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountDocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_type', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField()),
                ('localization', models.CharField(blank=True, max_length=20, null=True)),
                ('doc_code_prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('report_name', models.CharField(blank=True, max_length=20, null=True)),
                ('taxes_included', models.BooleanField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('purchase_cuit_required', models.BooleanField(blank=True, null=True)),
                ('purchase_alicuots', models.CharField(blank=True, max_length=20, null=True)),
                ('export_to_citi', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_document_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFinancialReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('style_overwrite', models.IntegerField(blank=True, null=True)),
                ('sign', models.IntegerField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('display_detail', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_financial_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('zip_to', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('auto_apply', models.BooleanField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('zip_from', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('vat_required', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('afip_code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionAccountTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_account_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionResCountryStateRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_fiscal_position_res_country_state_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionTaxTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_tax_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('note', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('zip_to', models.IntegerField(blank=True, null=True)),
                ('auto_apply', models.BooleanField(blank=True, null=True)),
                ('zip_from', models.IntegerField(blank=True, null=True)),
                ('afip_code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_fiscal_position_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFiscalPositionTemplateResCountryStateRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_fiscal_position_template_res_country_state_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFullReconcile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_full_reconcile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountingReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_to', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('filter_cmp', models.CharField(max_length=20)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('enable_filter', models.BooleanField(blank=True, null=True)),
                ('date_to_cmp', models.DateField(blank=True, null=True)),
                ('label_filter', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_from_cmp', models.DateField(blank=True, null=True)),
                ('debit_credit', models.BooleanField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'accounting_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_due', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('reference', models.CharField(blank=True, max_length=20, null=True)),
                ('reference_type', models.CharField(max_length=20)),
                ('number', models.CharField(blank=True, max_length=20, null=True)),
                ('amount_total_company_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_untaxed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('residual_company_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_total_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('amount_tax', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('sent', models.BooleanField(blank=True, null=True)),
                ('reconciled', models.BooleanField(blank=True, null=True)),
                ('origin', models.CharField(blank=True, max_length=20, null=True)),
                ('residual', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('move_name', models.CharField(blank=True, max_length=20, null=True)),
                ('date_invoice', models.DateField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('residual_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_untaxed_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('document_number', models.CharField(blank=True, max_length=20, null=True)),
                ('afip_service_start', models.DateField(blank=True, null=True)),
                ('currency_rate', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('afip_service_end', models.DateField(blank=True, null=True)),
                ('force_afip_concept', models.CharField(blank=True, max_length=20, null=True)),
                ('internal_notes', models.TextField(blank=True, null=True)),
                ('afip_auth_mode', models.CharField(blank=True, max_length=20, null=True)),
                ('afip_auth_verify_result', models.CharField(blank=True, max_length=20, null=True)),
                ('afip_xml_request', models.TextField(blank=True, null=True)),
                ('afip_xml_response', models.TextField(blank=True, null=True)),
                ('afip_batch_number', models.IntegerField(blank=True, null=True)),
                ('afip_message', models.TextField(blank=True, null=True)),
                ('afip_auth_code', models.CharField(blank=True, max_length=24, null=True)),
                ('afip_auth_code_due', models.DateField(blank=True, null=True)),
                ('afip_auth_verify_observation', models.CharField(blank=True, max_length=20, null=True)),
                ('afip_result', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoiceAccountMoveLineRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_invoice_account_move_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoiceCancel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_invoice_cancel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoiceConfirm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_invoice_confirm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoiceLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('price_unit', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('price_subtotal', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('price_subtotal_signed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('name', models.TextField()),
                ('quantity', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'account_invoice_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoiceLineTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_invoice_line_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoicePaymentRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_invoice_payment_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoiceRefund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_refund', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(max_length=20)),
                ('date_invoice', models.DateField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('document_number', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_invoice_refund',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountInvoiceTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('manual', models.BooleanField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_invoice_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('at_least_one_inbound', models.BooleanField(blank=True, null=True)),
                ('bank_statements_source', models.CharField(blank=True, max_length=5, null=True)),
                ('group_invoice_lines', models.BooleanField(blank=True, null=True)),
                ('display_on_footer', models.BooleanField(blank=True, null=True)),
                ('type', models.CharField(max_length=5)),
                ('show_on_dashboard', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('update_posted', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('at_least_one_outbound', models.BooleanField(blank=True, null=True)),
                ('refund_sequence_0', models.BooleanField(blank=True, db_column='refund_sequence', null=True)),
                ('document_sequence_type', models.CharField(blank=True, max_length=20, null=True)),
                ('use_documents', models.BooleanField(blank=True, null=True)),
                ('point_of_sale_type', models.CharField(blank=True, max_length=20, null=True)),
                ('point_of_sale_number', models.IntegerField(blank=True, null=True)),
                ('afip_ws', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'account_journal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalAccountingReportRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_journal_accounting_report_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalDocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_journal_document_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalInboundPaymentMethodRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_journal_inbound_payment_method_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalMergeWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('delete_from_journal', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_journal_merge_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalOutboundPaymentMethodRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_journal_outbound_payment_method_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountJournalTypeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_journal_type_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMove',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(max_length=20)),
                ('matched_percentage', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('narration', models.TextField(blank=True, null=True)),
                ('date', models.DateField()),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('name', models.CharField(max_length=20)),
                ('display_name', models.CharField(blank=True, max_length=20, null=True)),
                ('document_number', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('date_maturity', models.DateField()),
                ('blocked', models.BooleanField(blank=True, null=True)),
                ('amount_residual', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_residual_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('debit', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('ref', models.CharField(blank=True, max_length=20, null=True)),
                ('debit_cash_basis', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('reconciled', models.BooleanField(blank=True, null=True)),
                ('credit', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('balance_cash_basis', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=20)),
                ('credit_cash_basis', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'account_move_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveLineAccountTaxRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_move_line_account_tax_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveLinePaymentGroupToPayRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_move_line_payment_group_to_pay_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveLineReconcile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('writeoff', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('credit', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('debit', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('trans_nbr', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_move_line_reconcile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveLineReconcileWriteoff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_p', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_move_line_reconcile_writeoff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMoveReversal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'account_move_reversal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountOperationTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField()),
                ('second_amount_type', models.CharField(max_length=20)),
                ('has_second_line', models.BooleanField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=20, null=True)),
                ('second_label', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('amount_type', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('second_amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'account_operation_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPartialReconcile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('amount_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'account_partial_reconcile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('communication', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_date', models.DateField()),
                ('payment_difference_handling', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('partner_type', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('payment_type', models.CharField(max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=20, null=True)),
                ('document_number', models.CharField(blank=True, max_length=20, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('check_name', models.CharField(blank=True, max_length=20, null=True)),
                ('check_issue_date', models.DateField(blank=True, null=True)),
                ('check_owner_vat', models.CharField(blank=True, max_length=20, null=True)),
                ('check_payment_date', models.DateField(blank=True, null=True)),
                ('check_number', models.IntegerField(blank=True, null=True)),
                ('check_owner_name', models.CharField(blank=True, max_length=20, null=True)),
                ('withholding_base_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('withholding_number', models.CharField(blank=True, max_length=20, null=True)),
                ('force_amount_company_currency', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('withholding_non_taxable_minimum', models.FloatField(blank=True, null=True)),
                ('withholdable_invoiced_amount', models.FloatField(blank=True, null=True)),
                ('period_withholding_amount', models.FloatField(blank=True, null=True)),
                ('withholdable_advanced_amount', models.FloatField(blank=True, null=True)),
                ('accumulated_amount', models.FloatField(blank=True, null=True)),
                ('computed_withholding_amount', models.FloatField(blank=True, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('withholding_non_taxable_amount', models.FloatField(blank=True, null=True)),
                ('withholdable_base_amount', models.FloatField(blank=True, null=True)),
                ('previous_withholding_amount', models.FloatField(blank=True, null=True)),
                ('automatic', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('payment_date', models.DateField()),
                ('communication', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('partner_type', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('unreconciled_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('document_number', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('retencion_ganancias', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_payment_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentGroupInvoiceWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=20, null=True)),
                ('date_invoice', models.DateField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('amount_total', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('document_number', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_payment_group_invoice_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentGroupInvoiceWizardAccountTaxRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_payment_group_invoice_wizard_account_tax_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('payment_type', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_payment_method',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentReceiptbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=64)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('padding', models.IntegerField(blank=True, null=True)),
                ('partner_type', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_payment_receiptbook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('note', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_payment_term',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountPaymentTermLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('option', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('days', models.IntegerField()),
                ('value', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('value_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'account_payment_term_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountRegisterPayments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('payment_date', models.DateField()),
                ('communication', models.CharField(blank=True, max_length=20, null=True)),
                ('partner_type', models.CharField(blank=True, max_length=20, null=True)),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('payment_type', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_register_payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReportGeneralLedger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_balance', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('display_account', models.CharField(max_length=20)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('sortby', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('target_move', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'account_report_general_ledger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReportGeneralLedgerJournalRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_report_general_ledger_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_type', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField()),
                ('type_tax_use', models.CharField(max_length=20)),
                ('analytic', models.BooleanField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('include_base_amount', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('price_include', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('withholding_advances', models.BooleanField(blank=True, null=True)),
                ('withholding_non_taxable_minimum', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('withholding_amount_type', models.CharField(blank=True, max_length=20, null=True)),
                ('withholding_user_error_domain', models.CharField(blank=True, max_length=20, null=True)),
                ('withholding_non_taxable_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('withholding_accumulated_payments', models.CharField(blank=True, max_length=20, null=True)),
                ('withholding_user_error_message', models.CharField(blank=True, max_length=20, null=True)),
                ('withholding_type', models.CharField(max_length=20)),
                ('withholding_python_compute', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxAccountTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_tax_account_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxFiliationRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_tax_filiation_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('tax', models.CharField(blank=True, max_length=20, null=True)),
                ('afip_code', models.IntegerField(blank=True, null=True)),
                ('application', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'account_tax_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxPurchaseOrderLineRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_tax_purchase_order_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxSaleAdvancePaymentInvRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_tax_sale_advance_payment_inv_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxSaleOrderLineRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_tax_sale_order_line_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_type', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField()),
                ('price_include', models.BooleanField(blank=True, null=True)),
                ('type_tax_use', models.CharField(max_length=20)),
                ('analytic', models.BooleanField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('include_base_amount', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_tax_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxTemplateFiliationRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_tax_template_filiation_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTaxWithholdingRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('fix_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'account_tax_withholding_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountUnreconcile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_unreconcile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountVatLedger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presented_ledger', models.BinaryField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('reference', models.CharField(blank=True, max_length=20, null=True)),
                ('date_from', models.DateField()),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('first_page', models.IntegerField()),
                ('state', models.CharField(max_length=20)),
                ('presented_ledger_name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateField()),
                ('last_page', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
                ('sequence', models.IntegerField()),
                ('reginfo_cv_cbte', models.TextField(blank=True, db_column='REGINFO_CV_CBTE', null=True)),
                ('tax_credit_computable_amount', models.FloatField(blank=True, null=True)),
                ('prorate_type', models.CharField(blank=True, max_length=20, null=True)),
                ('prorate_tax_credit', models.BooleanField(blank=True, null=True)),
                ('reginfo_cv_cabecera', models.TextField(blank=True, db_column='REGINFO_CV_CABECERA', null=True)),
                ('reginfo_cv_alicuotas', models.TextField(blank=True, db_column='REGINFO_CV_ALICUOTAS', null=True)),
                ('reginfo_cv_compras_importaciones', models.TextField(blank=True, db_column='REGINFO_CV_COMPRAS_IMPORTACIONES', null=True)),
            ],
            options={
                'db_table': 'account_vat_ledger',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountVatLedgerJournalRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'account_vat_ledger_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AerooAddPrintButton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('open_action', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aeroo_add_print_button',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AerooPrintActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('out_format', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('copies', models.IntegerField()),
                ('out_format_code', models.CharField(blank=True, max_length=16, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('print_ids', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aeroo_print_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AerooPrintByAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('object_ids', models.CharField(max_length=250)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aeroo_print_by_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AerooRemovePrintButton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aeroo_remove_print_button',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AerooReportImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('file', models.BinaryField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aeroo_report_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afip_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipConcept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afip_concept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipIncoterm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('afip_code', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'afip_incoterm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipReponsbilityAccountFiscalPosRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'afip_reponsbility_account_fiscal_pos_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipReponsbilityAccountFiscalPosTempRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'afip_reponsbility_account_fiscal_pos_temp_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipResponsabilityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=8, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('company_requires_vat', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afip_responsability_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipTablaGananciasAlicuotasymontos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_de_regimen', models.CharField(max_length=6)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('porcentaje_inscripto', models.FloatField(blank=True, null=True)),
                ('concepto_referencia', models.TextField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('anexo_referencia', models.CharField(max_length=20)),
                ('porcentaje_no_inscripto', models.FloatField(blank=True, null=True)),
                ('montos_no_sujetos_a_retencion', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afip_tabla_ganancias_alicuotasymontos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipTablaGananciasEscala',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importe_hasta', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('importe_excedente', models.FloatField(blank=True, null=True)),
                ('importe_fijo', models.FloatField(blank=True, null=True)),
                ('importe_desde', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('porcentaje', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afip_tabla_ganancias_escala',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afip_tax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipVatF2002Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afip_vat_f2002_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipwsCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('crt', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('csr', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afipws_certificate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipwsCertificateAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('key', models.TextField(blank=True, null=True)),
                ('service_provider_cuit', models.CharField(blank=True, max_length=16, null=True)),
                ('company_cuit', models.CharField(blank=True, max_length=16, null=True)),
                ('common_name', models.CharField(max_length=64)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('department', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('service_type', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'afipws_certificate_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipwsConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('afip_ws', models.CharField(max_length=20)),
                ('generationtime', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('uniqueid', models.CharField(blank=True, max_length=20, null=True)),
                ('token', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('expirationtime', models.DateTimeField(blank=True, null=True)),
                ('sign', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'afipws_connection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipWsConsultWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('number', models.IntegerField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afip_ws_consult_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipWsCurrencyRateWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'afip_ws_currency_rate_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipWsfeError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=2, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'afip_wsfe_error',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AfipwsUploadCertificateWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('certificate_file', models.BinaryField()),
            ],
            options={
                'db_table': 'afipws_upload_certificate_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BarcodeNomenclature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=32)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('upc_ean_conv', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'barcode_nomenclature',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BarcodeRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=32)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('pattern', models.CharField(max_length=32)),
                ('encoding', models.CharField(max_length=20)),
                ('alias', models.CharField(max_length=32)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'barcode_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseActionRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('trg_date_range_type', models.CharField(blank=True, max_length=20, null=True)),
                ('trg_date_range', models.IntegerField(blank=True, null=True)),
                ('filter_pre_domain', models.CharField(blank=True, max_length=20, null=True)),
                ('on_change_fields', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('kind', models.CharField(blank=True, max_length=20, null=True)),
                ('filter_domain', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_action_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseActionRuleIrActServerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'base_action_rule_ir_act_server_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseActionRuleLeadTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('date_action_last', models.DateTimeField(blank=True, null=True)),
                ('priority', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('deadline', models.BooleanField(blank=True, null=True)),
                ('is_assigned_to_admin', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_action_rule_lead_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseActionRuleLineTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'base_action_rule_line_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseActionRuleResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'base_action_rule_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_light_multi_company', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('module_google_drive', models.BooleanField(blank=True, null=True)),
                ('module_inter_company_rules', models.BooleanField(blank=True, null=True)),
                ('module_base_import', models.BooleanField(blank=True, null=True)),
                ('module_portal', models.BooleanField(blank=True, null=True)),
                ('module_google_calendar', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('module_share', models.BooleanField(blank=True, null=True)),
                ('module_auth_oauth', models.BooleanField(blank=True, null=True)),
                ('company_share_partner', models.BooleanField(blank=True, null=True)),
                ('fail_counter', models.IntegerField(blank=True, null=True)),
                ('alias_domain', models.CharField(blank=True, max_length=20, null=True)),
                ('auth_signup_reset_password', models.BooleanField(blank=True, null=True)),
                ('auth_signup_uninvited', models.BooleanField(blank=True, null=True)),
                ('company_share_product', models.BooleanField(blank=True, null=True)),
                ('group_product_variant', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=20, null=True)),
                ('file_name', models.CharField(blank=True, max_length=20, null=True)),
                ('file', models.BinaryField(blank=True, null=True)),
                ('res_model', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'base_import_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsChar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharNoreadonly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_noreadonly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharReadonly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_readonly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharRequired',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_required',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharStates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharStillreadonly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_stillreadonly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2O',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2ORelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o_related',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2ORequired',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o_required',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2ORequiredRelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o_required_related',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsO2M',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_o2m',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsO2MChild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_o2m_child',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsPreview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('othervalue', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('somevalue', models.IntegerField()),
            ],
            options={
                'db_table': 'base_import_tests_models_preview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageExport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('format', models.CharField(max_length=20)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('data', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_language_export',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('filename', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('data', models.BinaryField()),
                ('overwrite', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_language_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageInstall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('overwrite', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_language_install',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageInstallWebsiteRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'base_language_install_website_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseModuleConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_module_configuration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseModuleUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.IntegerField(blank=True, null=True)),
                ('added', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_module_update',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseModuleUpgrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('module_info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_module_upgrade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasePartnerMergeAutomaticWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclude_journal_item', models.BooleanField(blank=True, null=True)),
                ('maximum_group', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('group_by_vat', models.BooleanField(blank=True, null=True)),
                ('group_by_email', models.BooleanField(blank=True, null=True)),
                ('group_by_parent_id', models.BooleanField(blank=True, null=True)),
                ('exclude_contact', models.BooleanField(blank=True, null=True)),
                ('group_by_is_company', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(max_length=20)),
                ('group_by_name', models.BooleanField(blank=True, null=True)),
                ('number_group', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_partner_merge_automatic_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasePartnerMergeAutomaticWizardResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'base_partner_merge_automatic_wizard_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasePartnerMergeLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aggr_ids', models.CharField(max_length=20)),
                ('min_id', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_partner_merge_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseSetupTerminology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('partner', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'base_setup_terminology',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseUpdateTranslations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_update_translations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseValidator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('validation_code', models.TextField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('input_test_string', models.CharField(blank=True, max_length=20, null=True)),
                ('help_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_validator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('message', models.CharField(blank=True, max_length=20, null=True)),
                ('channel', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'bus_bus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusPresence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('last_presence', models.DateTimeField(blank=True, null=True)),
                ('last_poll', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bus_presence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarAlarm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('interval', models.CharField(max_length=20)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField()),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'calendar_alarm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarAlarmCalendarEventRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'calendar_alarm_calendar_event_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarAttendee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('cn', models.CharField(blank=True, max_length=20, null=True)),
                ('access_token', models.CharField(blank=True, max_length=20, null=True)),
                ('availability', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'calendar_attendee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarContacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_contacts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allday', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('display_start', models.CharField(blank=True, max_length=20, null=True)),
                ('recurrency', models.BooleanField(blank=True, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('month_by', models.CharField(blank=True, max_length=20, null=True)),
                ('rrule', models.CharField(blank=True, max_length=20, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('final_date', models.DateField(blank=True, null=True)),
                ('tu', models.BooleanField(blank=True, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('week_list', models.CharField(blank=True, max_length=20, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('start', models.DateTimeField()),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('location', models.CharField(blank=True, max_length=20, null=True)),
                ('th', models.BooleanField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('fr', models.BooleanField(blank=True, null=True)),
                ('recurrent_id_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('stop_date', models.DateField(blank=True, null=True)),
                ('stop', models.DateTimeField()),
                ('stop_datetime', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('byday', models.CharField(blank=True, max_length=20, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=20, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('end_type', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('we', models.BooleanField(blank=True, null=True)),
                ('mo', models.BooleanField(blank=True, null=True)),
                ('interval', models.IntegerField(blank=True, null=True)),
                ('su', models.BooleanField(blank=True, null=True)),
                ('recurrent_id', models.IntegerField(blank=True, null=True)),
                ('sa', models.BooleanField(blank=True, null=True)),
                ('rrule_type', models.CharField(blank=True, max_length=20, null=True)),
                ('show_as', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'calendar_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEventResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'calendar_event_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_event_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CashBoxIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'cash_box_in',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CashBoxOut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cash_box_out',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChangePasswordUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('user_login', models.CharField(blank=True, max_length=20, null=True)),
                ('new_passwd', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'change_password_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChangePasswordWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'change_password_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('probability', models.FloatField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('date_last_stage_update', models.DateTimeField(blank=True, null=True)),
                ('date_action_last', models.DateTimeField(blank=True, null=True)),
                ('day_close', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('day_open', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=64, null=True)),
                ('date_action_next', models.DateTimeField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('date_conversion', models.DateTimeField(blank=True, null=True)),
                ('opt_out', models.BooleanField(blank=True, null=True)),
                ('date_open', models.DateTimeField(blank=True, null=True)),
                ('partner_name', models.CharField(blank=True, max_length=64, null=True)),
                ('planned_revenue', models.FloatField(blank=True, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(blank=True, max_length=20, null=True)),
                ('email_cc', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
                ('function', models.CharField(blank=True, max_length=20, null=True)),
                ('fax', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('street2', models.CharField(blank=True, max_length=20, null=True)),
                ('date_deadline', models.DateField(blank=True, null=True)),
                ('title_action', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('date_action', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('zip', models.CharField(blank=True, max_length=24, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=20, null=True)),
                ('message_bounce', models.IntegerField(blank=True, null=True)),
                ('email_from', models.CharField(blank=True, max_length=128, null=True)),
                ('referred', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'crm_lead',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead2OpportunityPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('action', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead2opportunity_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead2OpportunityPartnerMass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('force_assignation', models.BooleanField(blank=True, null=True)),
                ('deduplicate', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('action', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead2opportunity_partner_mass',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead2OpportunityPartnerMassResUsersRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'crm_lead2opportunity_partner_mass_res_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadCrmLead2OpportunityPartnerMassRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'crm_lead_crm_lead2opportunity_partner_mass_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadCrmLead2OpportunityPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'crm_lead_crm_lead2opportunity_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadLost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead_lost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadTagRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'crm_lead_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLostReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lost_reason',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmMergeOpportunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_merge_opportunity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmPartnerBinding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('action', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'crm_partner_binding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('probability', models.FloatField()),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('on_change', models.BooleanField(blank=True, null=True)),
                ('fold', models.BooleanField(blank=True, null=True)),
                ('legend_priority', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('requirements', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'crm_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('working_hours', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('name', models.CharField(max_length=64)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=64, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('use_quotations', models.BooleanField(blank=True, null=True)),
                ('invoiced_target', models.IntegerField(blank=True, null=True)),
                ('use_invoices', models.BooleanField(blank=True, null=True)),
                ('use_leads', models.BooleanField(blank=True, null=True)),
                ('use_opportunities', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmTeamStageRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'crm_team_stage_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrencyRateUpdateService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_run', models.DateField(blank=True, null=True)),
                ('max_delta_days', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('service', models.CharField(max_length=20)),
                ('interval_type', models.CharField(blank=True, max_length=20, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('interval_number', models.IntegerField(blank=True, null=True)),
                ('rate_perc', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('rate_surcharge', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'currency_rate_update_service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DbBackup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sftp_password', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('sftp_user', models.CharField(blank=True, max_length=20, null=True)),
                ('days_to_keep', models.IntegerField()),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('method', models.CharField(blank=True, max_length=20, null=True)),
                ('sftp_private_key', models.CharField(blank=True, max_length=20, null=True)),
                ('sftp_host', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('folder', models.CharField(max_length=20)),
                ('sftp_port', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'db_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DecimalPrecision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('digits', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'decimal_precision',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DecimalPrecisionTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('float_2', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('float', models.FloatField(blank=True, null=True)),
                ('float_4', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'decimal_precision_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryCarrier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_type', models.CharField(max_length=20)),
                ('fixed_price', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('zip_to', models.CharField(blank=True, max_length=20, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('shipping_enabled', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('free_if_more_than', models.BooleanField(blank=True, null=True)),
                ('zip_from', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'delivery_carrier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryCarrierCountryRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'delivery_carrier_country_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryCarrierStateRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'delivery_carrier_state_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryPriceRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_price', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('sequence', models.IntegerField()),
                ('max_value', models.FloatField()),
                ('standard_price', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('list_base_price', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('operator', models.CharField(max_length=20)),
                ('variable_factor', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('variable', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'delivery_price_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocsConfigInstaller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_type', models.CharField(blank=True, max_length=20, null=True)),
                ('username', models.CharField(blank=True, max_length=32, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('enabled', models.BooleanField(blank=True, null=True)),
                ('host', models.CharField(max_length=64)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('error_details', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('msg', models.TextField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=32, null=True)),
                ('port', models.IntegerField()),
            ],
            options={
                'db_table': 'docs_config_installer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplateAttachmentRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'email_template_attachment_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplatePreview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('partner_to', models.CharField(blank=True, max_length=20, null=True)),
                ('subject', models.CharField(blank=True, max_length=20, null=True)),
                ('user_signature', models.BooleanField(blank=True, null=True)),
                ('null_value', models.CharField(blank=True, max_length=20, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=20, null=True)),
                ('res_id', models.CharField(blank=True, max_length=20, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('email_to', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('copyvalue', models.CharField(blank=True, max_length=20, null=True)),
                ('lang', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('report_name', models.CharField(blank=True, max_length=20, null=True)),
                ('use_default_to', models.BooleanField(blank=True, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=20, null=True)),
                ('model_0', models.CharField(blank=True, db_column='model', max_length=20, null=True)),
                ('email_from', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'email_template_preview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplatePreviewResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'email_template_preview_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FetchmailConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fetchmail_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FetchmailServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('configuration', models.TextField(blank=True, null=True)),
                ('script', models.CharField(blank=True, max_length=20, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('attach', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=20)),
                ('user', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('is_ssl', models.BooleanField(blank=True, null=True)),
                ('server', models.CharField(blank=True, max_length=20, null=True)),
                ('original', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fetchmail_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gateway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('pk_0', models.BigIntegerField()),
                ('direccion', models.CharField(blank=True, max_length=100, null=True)),
                ('alta', models.CharField(blank=True, max_length=10, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gateway',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('help', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('usage', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('res_model', models.CharField(blank=True, max_length=20, null=True)),
                ('params_store', models.BinaryField(blank=True, null=True)),
                ('tag', models.CharField(max_length=20)),
                ('context', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ir_act_client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('help', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('usage', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ir_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActionsTodo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('state', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
                ('action_id', models.IntegerField()),
            ],
            options={
                'db_table': 'ir_actions_todo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActReportXml',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('help', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('usage', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('parser', models.CharField(blank=True, max_length=20, null=True)),
                ('header', models.BooleanField(blank=True, null=True)),
                ('report_type', models.CharField(max_length=20)),
                ('attachment', models.CharField(blank=True, max_length=20, null=True)),
                ('report_sxw_content_data', models.BinaryField(blank=True, null=True)),
                ('report_xml', models.CharField(blank=True, max_length=20, null=True)),
                ('report_rml_content_data', models.BinaryField(blank=True, null=True)),
                ('auto', models.BooleanField(blank=True, null=True)),
                ('report_file', models.CharField(blank=True, max_length=20, null=True)),
                ('multi', models.BooleanField(blank=True, null=True)),
                ('report_xsl', models.CharField(blank=True, max_length=20, null=True)),
                ('report_rml', models.CharField(blank=True, max_length=20, null=True)),
                ('report_name', models.CharField(max_length=20)),
                ('attachment_use', models.BooleanField(blank=True, null=True)),
                ('model', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('logo', models.BinaryField(blank=True, null=True)),
                ('background_image', models.BinaryField(blank=True, null=True)),
                ('use_background_image', models.BooleanField(blank=True, null=True)),
                ('print_logo', models.CharField(max_length=20)),
                ('account_invoice_state', models.CharField(blank=True, max_length=20, null=True)),
                ('account_invoice_lines_to_split', models.IntegerField(blank=True, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=20, null=True)),
                ('account_invoice_split_invoice', models.BooleanField(blank=True, null=True)),
                ('sale_order_state', models.CharField(blank=True, max_length=20, null=True)),
                ('deferred_limit', models.IntegerField(blank=True, null=True)),
                ('copies', models.IntegerField(blank=True, null=True)),
                ('tml_source', models.CharField(blank=True, max_length=20, null=True)),
                ('deferred', models.CharField(blank=True, max_length=20, null=True)),
                ('charset', models.CharField(max_length=20)),
                ('parser_def', models.TextField(blank=True, null=True)),
                ('preload_mode', models.CharField(blank=True, max_length=20, null=True)),
                ('fallback_false', models.BooleanField(blank=True, null=True)),
                ('parser_state', models.CharField(blank=True, max_length=20, null=True)),
                ('styles_mode', models.CharField(blank=True, max_length=20, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('report_wizard', models.BooleanField(blank=True, null=True)),
                ('content_fname', models.CharField(blank=True, max_length=64, null=True)),
                ('process_sep', models.BooleanField(blank=True, null=True)),
                ('parser_loc', models.CharField(blank=True, max_length=128, null=True)),
                ('copies_intercalate', models.BooleanField(blank=True, null=True)),
                ('in_format', models.CharField(blank=True, max_length=20, null=True)),
                ('download_filename', models.CharField(blank=True, max_length=20, null=True)),
                ('partner_type', models.CharField(blank=True, max_length=20, null=True)),
                ('stock_report_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ir_act_report_xml',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('help', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('usage', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('code', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('condition', models.CharField(blank=True, max_length=20, null=True)),
                ('ref_object', models.CharField(blank=True, max_length=128, null=True)),
                ('id_object', models.CharField(blank=True, max_length=128, null=True)),
                ('crud_model_name', models.CharField(blank=True, max_length=20, null=True)),
                ('use_relational_model', models.CharField(max_length=20)),
                ('use_create', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('id_value', models.CharField(blank=True, max_length=20, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
                ('link_new_record', models.BooleanField(blank=True, null=True)),
                ('use_write', models.CharField(max_length=20)),
                ('wkf_model_name', models.CharField(blank=True, max_length=20, null=True)),
                ('copyvalue', models.CharField(blank=True, max_length=20, null=True)),
                ('write_expression', models.CharField(blank=True, max_length=20, null=True)),
                ('website_published', models.BooleanField(blank=True, null=True)),
                ('website_path', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ir_act_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('help', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('usage', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('target', models.CharField(max_length=20)),
                ('url', models.TextField()),
            ],
            options={
                'db_table': 'ir_act_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActWindow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('help', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('usage', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('domain', models.CharField(blank=True, max_length=20, null=True)),
                ('res_model', models.CharField(max_length=20)),
                ('view_type', models.CharField(max_length=20)),
                ('src_model', models.CharField(blank=True, max_length=20, null=True)),
                ('auto_refresh', models.IntegerField(blank=True, null=True)),
                ('view_mode', models.CharField(max_length=20)),
                ('target', models.CharField(blank=True, max_length=20, null=True)),
                ('multi', models.BooleanField(blank=True, null=True)),
                ('auto_search', models.BooleanField(blank=True, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('filter', models.BooleanField(blank=True, null=True)),
                ('limit', models.IntegerField(blank=True, null=True)),
                ('context', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ir_act_window',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActWindowGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_act_window_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActWindowView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multi', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('view_mode', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_act_window_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('res_model', models.CharField(blank=True, max_length=20, null=True)),
                ('res_name', models.CharField(blank=True, max_length=20, null=True)),
                ('db_datas', models.BinaryField(blank=True, null=True)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('index_content', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
                ('public', models.BooleanField(blank=True, null=True)),
                ('store_fname', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('res_field', models.CharField(blank=True, max_length=20, null=True)),
                ('mimetype', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('url', models.CharField(blank=True, max_length=1024, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('checksum', models.CharField(blank=True, max_length=40, null=True)),
                ('datas_fname', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ir_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrAutovacuum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_autovacuum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrConfigParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.TextField()),
                ('key', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'ir_config_parameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrConfigParameterGroupsRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_config_parameter_groups_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrCron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function', models.CharField(blank=True, max_length=20, null=True)),
                ('args', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('interval_type', models.CharField(blank=True, max_length=20, null=True)),
                ('numbercall', models.IntegerField(blank=True, null=True)),
                ('nextcall', models.DateTimeField()),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('doall', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('interval_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_cron',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrExports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_exports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrExportsLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_exports_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrFilters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.TextField()),
                ('model_id', models.CharField(max_length=20)),
                ('domain', models.TextField()),
                ('name', models.CharField(max_length=20)),
                ('is_default', models.BooleanField(blank=True, null=True)),
                ('context', models.TextField()),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_filters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrLogging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_uid', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('level', models.CharField(blank=True, max_length=20, null=True)),
                ('line', models.CharField(max_length=20)),
                ('dbname', models.CharField(blank=True, max_length=20, null=True)),
                ('func', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('path', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ir_logging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrMailServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smtp_encryption', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('smtp_port', models.IntegerField()),
                ('smtp_host', models.CharField(max_length=20)),
                ('smtp_pass', models.CharField(blank=True, max_length=64, null=True)),
                ('smtp_debug', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('smtp_user', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'ir_mail_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=20)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('transient', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perm_read', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('perm_unlink', models.BooleanField(blank=True, null=True)),
                ('perm_write', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('perm_create', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_init', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=1)),
                ('definition', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_constraint',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('noupdate', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('date_init', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('module', models.CharField(max_length=20)),
                ('model', models.CharField(max_length=20)),
                ('res_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('field_description', models.CharField(max_length=20)),
                ('help', models.TextField(blank=True, null=True)),
                ('ttype', models.CharField(max_length=20)),
                ('relation', models.CharField(blank=True, max_length=20, null=True)),
                ('relation_field', models.CharField(blank=True, max_length=20, null=True)),
                ('index', models.BooleanField(blank=True, null=True)),
                ('copy', models.BooleanField(blank=True, null=True)),
                ('related', models.CharField(blank=True, max_length=20, null=True)),
                ('readonly', models.BooleanField(blank=True, null=True)),
                ('required', models.BooleanField(blank=True, null=True)),
                ('selectable', models.BooleanField(blank=True, null=True)),
                ('translate', models.BooleanField(blank=True, null=True)),
                ('relation_table', models.CharField(blank=True, max_length=20, null=True)),
                ('column1', models.CharField(blank=True, max_length=20, null=True)),
                ('column2', models.CharField(blank=True, max_length=20, null=True)),
                ('domain', models.CharField(blank=True, max_length=20, null=True)),
                ('selection', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('on_delete', models.CharField(blank=True, max_length=20, null=True)),
                ('depends', models.CharField(blank=True, max_length=20, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('complete_name', models.CharField(blank=True, max_length=20, null=True)),
                ('compute', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelFieldsGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_model_fields_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_init', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('visible', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_module_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=20, null=True)),
                ('summary', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('author', models.CharField(blank=True, max_length=20, null=True)),
                ('icon', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('latest_version', models.CharField(blank=True, max_length=20, null=True)),
                ('shortdesc', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('application', models.BooleanField(blank=True, null=True)),
                ('demo', models.BooleanField(blank=True, null=True)),
                ('web', models.BooleanField(blank=True, null=True)),
                ('license', models.CharField(blank=True, max_length=20, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('auto_install', models.BooleanField(blank=True, null=True)),
                ('menus_by_module', models.TextField(blank=True, null=True)),
                ('reports_by_module', models.TextField(blank=True, null=True)),
                ('maintainer', models.CharField(blank=True, max_length=20, null=True)),
                ('contributors', models.TextField(blank=True, null=True)),
                ('views_by_module', models.TextField(blank=True, null=True)),
                ('published_version', models.CharField(blank=True, max_length=20, null=True)),
                ('url', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ir_module_module',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleModuleDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ir_module_module_dependency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_text', models.TextField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=20)),
                ('value_datetime', models.DateTimeField(blank=True, null=True)),
                ('value_binary', models.BinaryField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('value_reference', models.CharField(blank=True, max_length=20, null=True)),
                ('value_integer', models.IntegerField(blank=True, null=True)),
                ('res_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ir_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_force', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('global_field', models.BooleanField(blank=True, db_column='global', null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('perm_read', models.BooleanField(blank=True, null=True)),
                ('perm_unlink', models.BooleanField(blank=True, null=True)),
                ('perm_write', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('perm_create', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrSequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('padding', models.IntegerField()),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('number_next', models.IntegerField()),
                ('implementation', models.CharField(max_length=20)),
                ('use_date_range', models.BooleanField(blank=True, null=True)),
                ('number_increment', models.IntegerField()),
                ('prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('suffix', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ir_sequence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrSequenceDateRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('number_next', models.IntegerField()),
                ('date_from', models.DateField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateField()),
            ],
            options={
                'db_table': 'ir_sequence_date_range',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrServerObjectLines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value', models.TextField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ir_server_object_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('module', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ir_translation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('web_icon', models.CharField(blank=True, max_length=20, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('action', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ir_ui_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiMenuGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_ui_menu_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('field_parent', models.CharField(blank=True, max_length=20, null=True)),
                ('priority', models.IntegerField()),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('arch_db', models.TextField(blank=True, null=True)),
                ('key', models.CharField(blank=True, max_length=20, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('arch_fs', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('mode', models.CharField(max_length=20)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('customize_show', models.BooleanField(blank=True, null=True)),
                ('website_meta_title', models.CharField(blank=True, max_length=20, null=True)),
                ('website_meta_description', models.TextField(blank=True, null=True)),
                ('website_meta_keywords', models.CharField(blank=True, max_length=20, null=True)),
                ('page', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_ui_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiViewCustom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('arch', models.TextField()),
            ],
            options={
                'db_table': 'ir_ui_view_custom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiViewGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_ui_view_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('key2', models.CharField(blank=True, max_length=20, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('key', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('model_0', models.CharField(db_column='model', max_length=20)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('url', models.CharField(max_length=20)),
                ('favicon', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'link_tracker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkTrackerClick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('click_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'link_tracker_click',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LinkTrackerCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'link_tracker_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('alias_defaults', models.TextField()),
                ('alias_contact', models.CharField(max_length=20)),
                ('alias_force_thread_id', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('alias_parent_thread_id', models.IntegerField(blank=True, null=True)),
                ('alias_name', models.CharField(blank=True, max_length=20, null=True, unique=True)),
            ],
            options={
                'db_table': 'mail_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.CharField(blank=True, max_length=50, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('public', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('channel_type', models.CharField(blank=True, max_length=20, null=True)),
                ('email_send', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelMailWizardInviteRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_channel_mail_wizard_invite_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('is_minimized', models.BooleanField(blank=True, null=True)),
                ('is_pinned', models.BooleanField(blank=True, null=True)),
                ('fold_state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_channel_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelResGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_channel_res_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('no_auto_thread', models.BooleanField(blank=True, null=True)),
                ('notify', models.BooleanField(blank=True, null=True)),
                ('active_domain', models.TextField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=20, null=True)),
                ('composition_mode', models.CharField(blank=True, max_length=20, null=True)),
                ('is_log', models.BooleanField(blank=True, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=20, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('record_name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('use_active_domain', models.BooleanField(blank=True, null=True)),
                ('email_from', models.CharField(blank=True, max_length=20, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=20, null=True)),
                ('message_type', models.CharField(max_length=20)),
                ('mass_mailing_name', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'mail_compose_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessageIrAttachmentsRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_compose_message_ir_attachments_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessageMailMassMailingListRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_compose_message_mail_mass_mailing_list_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessageResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_compose_message_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailFollowers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(max_length=20)),
                ('res_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_followers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailFollowersMailMessageSubtypeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_followers_mail_message_subtype_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('notification', models.BooleanField(blank=True, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('email_to', models.TextField(blank=True, null=True)),
                ('headers', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('references', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=20, null=True)),
                ('failure_reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_mail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMailResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_mail_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMailStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('replied', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('state_update', models.DateTimeField(blank=True, null=True)),
                ('opened', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=20, null=True)),
                ('sent', models.DateTimeField(blank=True, null=True)),
                ('scheduled', models.DateTimeField(blank=True, null=True)),
                ('mail_mail_id_int', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('exception', models.DateTimeField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('bounced', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_mail_statistics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMassMailing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('schedule_date', models.DateTimeField(blank=True, null=True)),
                ('contact_ab_pc', models.IntegerField(blank=True, null=True)),
                ('mailing_model', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('mailing_domain', models.CharField(blank=True, max_length=20, null=True)),
                ('keep_archives', models.BooleanField(blank=True, null=True)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('reply_to_mode', models.CharField(max_length=20)),
                ('email_from', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'mail_mass_mailing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMassMailingCampaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('unique_ab_testing', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'mail_mass_mailing_campaign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMassMailingContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('opt_out', models.BooleanField(blank=True, null=True)),
                ('unsubscription_date', models.DateTimeField(blank=True, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('message_bounce', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'mail_mass_mailing_contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMassMailingList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('popup_redirect_url', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('popup_content', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_mass_mailing_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMassMailingListRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_mass_mailing_list_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMassMailingStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_mass_mailing_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMassMailingTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_mass_mailing_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMassMailingTagRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_mass_mailing_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMassMailingTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('email_to', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_mass_mailing_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=20, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=20, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('record_name', models.CharField(blank=True, max_length=20, null=True)),
                ('no_auto_thread', models.BooleanField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=20, null=True)),
                ('message_type', models.CharField(max_length=20)),
                ('email_from', models.CharField(blank=True, max_length=20, null=True)),
                ('website_published', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageMailChannelRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_message_mail_channel_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageResPartnerNeedactionRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_message_res_partner_needaction_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_message_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageResPartnerStarredRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_message_res_partner_starred_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageSubtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('default', models.BooleanField(blank=True, null=True)),
                ('res_model', models.CharField(blank=True, max_length=20, null=True)),
                ('internal', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('relation_field', models.CharField(blank=True, max_length=20, null=True)),
                ('hidden', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'mail_message_subtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailShortcode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=20, null=True)),
                ('source', models.CharField(max_length=20)),
                ('shortcode_type', models.CharField(max_length=20)),
                ('substitution', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_shortcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('partner_to', models.CharField(blank=True, max_length=20, null=True)),
                ('subject', models.CharField(blank=True, max_length=20, null=True)),
                ('user_signature', models.BooleanField(blank=True, null=True)),
                ('null_value', models.CharField(blank=True, max_length=20, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=20, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('email_to', models.CharField(blank=True, max_length=20, null=True)),
                ('copyvalue', models.CharField(blank=True, max_length=20, null=True)),
                ('lang', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('report_name', models.CharField(blank=True, max_length=20, null=True)),
                ('use_default_to', models.BooleanField(blank=True, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=20, null=True)),
                ('model_0', models.CharField(blank=True, db_column='model', max_length=20, null=True)),
                ('email_from', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'mail_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailTrackingValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_type', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('old_value_datetime', models.DateTimeField(blank=True, null=True)),
                ('old_value_monetary', models.FloatField(blank=True, null=True)),
                ('new_value_monetary', models.FloatField(blank=True, null=True)),
                ('old_value_char', models.CharField(blank=True, max_length=20, null=True)),
                ('old_value_float', models.FloatField(blank=True, null=True)),
                ('new_value_text', models.TextField(blank=True, null=True)),
                ('new_value_float', models.FloatField(blank=True, null=True)),
                ('field', models.CharField(max_length=20)),
                ('old_value_text', models.TextField(blank=True, null=True)),
                ('field_desc', models.CharField(max_length=20)),
                ('new_value_char', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('new_value_datetime', models.DateTimeField(blank=True, null=True)),
                ('new_value_integer', models.IntegerField(blank=True, null=True)),
                ('old_value_integer', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_tracking_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailWizardInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('res_model', models.CharField(max_length=20)),
                ('send_mail', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_wizard_invite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailWizardInviteResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_wizard_invite_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MakeProcurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('date_planned', models.DateField()),
                ('res_model', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'make_procurement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MakeProcurementStockLocationRouteRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'make_procurement_stock_location_route_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MarketingConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('module_marketing_campaign', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'marketing_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MassMailingConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('group_website_popup_on_exit', models.IntegerField(blank=True, null=True)),
                ('module_mass_mailing_themes', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('group_mass_mailing_campaign', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mass_mailing_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MassMailingIrAttachmentsRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mass_mailing_ir_attachments_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingCategoryRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'meeting_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MergeOpportunityRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'merge_opportunity_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageAttachmentRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'message_attachment_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerUpdateFromPadronRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'partner_update_from_padron_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentAcquirer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('fees_active', models.BooleanField(blank=True, null=True)),
                ('cancel_msg', models.TextField(blank=True, null=True)),
                ('fees_dom_fixed', models.FloatField(blank=True, null=True)),
                ('fees_int_fixed', models.FloatField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('environment', models.CharField(blank=True, max_length=20, null=True)),
                ('provider', models.CharField(max_length=20)),
                ('website_published', models.BooleanField(blank=True, null=True)),
                ('auto_confirm', models.CharField(max_length=20)),
                ('pending_msg', models.TextField(blank=True, null=True)),
                ('post_msg', models.TextField(blank=True, null=True)),
                ('fees_int_var', models.FloatField(blank=True, null=True)),
                ('done_msg', models.TextField(blank=True, null=True)),
                ('pre_msg', models.TextField(blank=True, null=True)),
                ('error_msg', models.TextField(blank=True, null=True)),
                ('fees_dom_var', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('todopago_secret_key', models.CharField(blank=True, max_length=20, null=True)),
                ('todopago_client_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'payment_acquirer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('acquirer_ref', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_method',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_message', models.TextField(blank=True, null=True)),
                ('callback_eval', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('reference', models.CharField(max_length=20)),
                ('fees', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('partner_name', models.CharField(blank=True, max_length=20, null=True)),
                ('partner_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=5)),
                ('acquirer_reference', models.CharField(blank=True, max_length=10, null=True)),
                ('partner_address', models.CharField(blank=True, max_length=30, null=True)),
                ('partner_email', models.CharField(blank=True, max_length=30, null=True)),
                ('partner_lang', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('partner_zip', models.CharField(blank=True, max_length=5, null=True)),
                ('html_3ds', models.CharField(blank=True, max_length=20, null=True)),
                ('date_validate', models.DateTimeField(blank=True, null=True)),
                ('partner_city', models.CharField(blank=True, max_length=5, null=True)),
                ('amount', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('todopago_return_url', models.CharField(blank=True, db_column='todopago_Return_url', max_length=20, null=True)),
                ('todopago_publicrequestkey', models.CharField(blank=True, db_column='todopago_PublicRequestKey', max_length=20, null=True)),
                ('todopago_answer', models.CharField(blank=True, db_column='todopago_Answer', max_length=20, null=True)),
                ('todopago_requestkey', models.CharField(blank=True, db_column='todopago_RequestKey', max_length=20, null=True)),
            ],
            options={
                'db_table': 'payment_transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('welcome_message', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'portal_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalWizardUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=240, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('in_portal', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'portal_wizard_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrintPrenumberedChecks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('next_check_number', models.IntegerField()),
            ],
            options={
                'db_table': 'print_prenumbered_checks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('move_type', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'procurement_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('date_planned', models.DateTimeField()),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('product_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'procurement_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementOrderComputeAll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'procurement_order_compute_all',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementOrderpointCompute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'procurement_orderpoint_compute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('action', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('group_propagation_option', models.CharField(blank=True, max_length=20, null=True)),
                ('delay', models.IntegerField(blank=True, null=True)),
                ('propagate', models.BooleanField(blank=True, null=True)),
                ('procure_method', models.CharField(max_length=20)),
                ('route_sequence', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'procurement_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product_price_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('qty1', models.IntegerField(blank=True, null=True)),
                ('qty2', models.IntegerField(blank=True, null=True)),
                ('qty3', models.IntegerField(blank=True, null=True)),
                ('qty4', models.IntegerField(blank=True, null=True)),
                ('qty5', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_price_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product_Pricelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'product_pricelist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAccessoryRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_accessory_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAlternativeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_alternative_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'product_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_attribute_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeLineProductAttributeValueRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_attribute_line_product_attribute_value_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('price_extra', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_attribute_price',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'product_attribute_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValueProductProductRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_attribute_value_product_product_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCatalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('taxes_included', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('use_planned_price', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_catalog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCatalogReportCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_catalog_report_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCatalogReportCategoriesPublic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_catalog_report_categories_public',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCatalogReportPricelists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_catalog_report_pricelists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'product_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPackaging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('qty', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_packaging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPriceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_price_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPricelistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fixed_price', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('price_discount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('sequence', models.IntegerField()),
                ('price_max_margin', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('applied_on', models.CharField(max_length=20)),
                ('min_quantity', models.IntegerField(blank=True, null=True)),
                ('percent_price', models.FloatField(blank=True, null=True)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('price_min_margin', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('compute_price', models.CharField(blank=True, max_length=20, null=True)),
                ('base', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('price_surcharge', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_round', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'product_pricelist_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('default_code', models.CharField(blank=True, max_length=20, null=True)),
                ('name_template', models.CharField(blank=True, max_length=20, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductProductCatalogReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(max_length=20)),
                ('only_with_stock', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('include_sub_categories', models.BooleanField(blank=True, null=True)),
                ('prod_display_type', models.CharField(blank=True, max_length=20, null=True)),
                ('print_product_uom', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('categories_order', models.CharField(blank=True, max_length=20, null=True)),
                ('taxes_included', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('products_order', models.CharField(blank=True, max_length=20, null=True)),
                ('category_type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'product_product_catalog_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPublicCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('website_meta_description', models.TextField(blank=True, null=True)),
                ('website_meta_title', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('website_meta_keywords', models.CharField(blank=True, max_length=20, null=True)),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_public_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPublicCategoryProductTemplateRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_public_category_product_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPutaway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('method', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'product_putaway',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductRemoval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('method', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'product_removal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('html_class', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_style',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductStyleProductTemplateRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_style_product_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSupplierinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=20, null=True)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('qty', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('delay', models.IntegerField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('min_qty', models.FloatField()),
                ('product_code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'product_supplierinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSupplierTaxesRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_supplier_taxes_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTaxesRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'product_taxes_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warranty', models.FloatField(blank=True, null=True)),
                ('list_price', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('description_purchase', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sale_ok', models.BooleanField(blank=True, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('description_sale', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('volume', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('rental', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=20)),
                ('track_service', models.CharField(blank=True, max_length=20, null=True)),
                ('invoice_policy', models.CharField(blank=True, max_length=20, null=True)),
                ('description_picking', models.TextField(blank=True, null=True)),
                ('sale_delay', models.FloatField(blank=True, null=True)),
                ('tracking', models.CharField(max_length=20)),
                ('purchase_ok', models.BooleanField(blank=True, null=True)),
                ('purchase_method', models.CharField(blank=True, max_length=20, null=True)),
                ('website_description', models.TextField(blank=True, null=True)),
                ('website_sequence', models.IntegerField(blank=True, null=True)),
                ('website_meta_description', models.TextField(blank=True, null=True)),
                ('website_meta_keywords', models.CharField(blank=True, max_length=20, null=True)),
                ('website_meta_title', models.CharField(blank=True, max_length=20, null=True)),
                ('website_published', models.BooleanField(blank=True, null=True)),
                ('website_size_x', models.IntegerField(blank=True, null=True)),
                ('website_size_y', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductUom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('rounding', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('factor', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('uom_type', models.CharField(max_length=5)),
                ('afip_code', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'product_uom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductUomCateg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_uom_categ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_sale_service', models.IntegerField(blank=True, null=True)),
                ('module_pad', models.IntegerField(blank=True, null=True)),
                ('module_project_timesheet_synchro', models.BooleanField(blank=True, null=True)),
                ('module_project_forecast', models.BooleanField(blank=True, null=True)),
                ('module_project_issue_sheet', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('module_rating_project', models.IntegerField(blank=True, null=True)),
                ('generate_project_alias', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('group_time_work_estimation_tasks', models.IntegerField(blank=True, null=True)),
                ('module_project_timesheet', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias_model', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('privacy_visibility', models.CharField(max_length=20)),
                ('label_tasks', models.CharField(blank=True, max_length=20, null=True)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('percentage_satisfaction_project', models.IntegerField(blank=True, null=True)),
                ('is_visible_happy_customer', models.BooleanField(blank=True, null=True)),
                ('percentage_satisfaction_task', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTagsProjectTaskRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'project_tags_project_task_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('planned_hours', models.FloatField(blank=True, null=True)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(blank=True, max_length=20, null=True)),
                ('date_last_stage_update', models.DateTimeField(blank=True, null=True)),
                ('date_assign', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('kanban_state', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=128)),
                ('date_deadline', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('remaining_hours', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'project_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('kanban_state', models.CharField(blank=True, max_length=20, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('planned_hours', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('remaining_hours', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'project_task_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskParentRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'project_task_parent_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('legend_done', models.CharField(blank=True, max_length=20, null=True)),
                ('fold', models.BooleanField(blank=True, null=True)),
                ('legend_blocked', models.CharField(blank=True, max_length=20, null=True)),
                ('legend_priority', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('legend_normal', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('auto_validation_kanban_state', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_task_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskTypeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'project_task_type_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_uom', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('module_stock_dropshipping', models.IntegerField(blank=True, null=True)),
                ('group_costing_method', models.IntegerField(blank=True, null=True)),
                ('group_advance_purchase_requisition', models.IntegerField(blank=True, null=True)),
                ('group_manage_vendor_price', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('group_product_variant', models.IntegerField(blank=True, null=True)),
                ('module_purchase_requisition', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'purchase_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('date_order', models.DateTimeField()),
                ('amount_untaxed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('amount_tax', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('partner_ref', models.CharField(blank=True, max_length=20, null=True)),
                ('date_approve', models.DateField(blank=True, null=True)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('invoice_status', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('internal_notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'purchase_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('price_unit', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('price_subtotal', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('product_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('qty_received', models.FloatField(blank=True, null=True)),
                ('price_tax', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('qty_invoiced', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.TextField()),
                ('price_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('date_planned', models.DateTimeField()),
            ],
            options={
                'db_table': 'purchase_order_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RatingRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('access_token', models.CharField(blank=True, max_length=20, null=True)),
                ('res_model', models.CharField(max_length=20)),
                ('res_name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('res_id', models.IntegerField()),
                ('website_published', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rating_rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelModulesLangexport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'rel_modules_langexport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelServerActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'rel_server_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportAccountDocumentTypeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'report_account_document_type_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportAccountJournalRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'report_account_journal_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportAerooInstaller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('link', models.CharField(blank=True, max_length=128, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_aeroo_installer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportConfigurationDefault',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_text', models.TextField(blank=True, null=True)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=256)),
                ('override_values', models.BooleanField(blank=True, null=True)),
                ('value_type', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('apply_to_all', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_configuration_default',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportConfigurationLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_text', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=256)),
                ('value_type', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('value_boolean', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_configuration_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportConfigurationReceiptbookRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'report_configuration_receiptbook_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportConfigurationStockBookRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'report_configuration_stock_book_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportConfigurationStockPickingTypeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'report_configuration_stock_picking_type_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportMimetypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=64)),
                ('compatible_types', models.CharField(blank=True, max_length=128, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('filter_name', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'report_mimetypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportPaperformat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_width', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('format', models.CharField(blank=True, max_length=5, null=True)),
                ('default', models.BooleanField(blank=True, null=True)),
                ('header_line', models.BooleanField(blank=True, null=True)),
                ('header_spacing', models.IntegerField(blank=True, null=True)),
                ('dpi', models.IntegerField()),
                ('margin_right', models.FloatField(blank=True, null=True)),
                ('margin_top', models.FloatField(blank=True, null=True)),
                ('margin_left', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('margin_bottom', models.FloatField(blank=True, null=True)),
                ('page_height', models.IntegerField(blank=True, null=True)),
                ('orientation', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'report_paperformat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportStylesheets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=64)),
                ('report_styles', models.BinaryField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_stylesheets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('fax', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('zip', models.CharField(blank=True, max_length=20, null=True)),
                ('street2', models.CharField(blank=True, max_length=20, null=True)),
                ('bic', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('rml_footer', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('rml_header', models.TextField()),
                ('rml_paper_format', models.CharField(max_length=20)),
                ('logo_web', models.BinaryField(blank=True, null=True)),
                ('account_no', models.CharField(blank=True, max_length=5, null=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('custom_footer', models.BooleanField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=64, null=True)),
                ('rml_header2', models.TextField()),
                ('rml_header3', models.TextField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('rml_header1', models.CharField(blank=True, max_length=5, null=True)),
                ('company_registry', models.CharField(blank=True, max_length=64, null=True)),
                ('fiscalyear_lock_date', models.DateField(blank=True, null=True)),
                ('bank_account_code_prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('cash_account_code_prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('anglo_saxon_accounting', models.BooleanField(blank=True, null=True)),
                ('fiscalyear_last_day', models.IntegerField()),
                ('expects_chart_of_accounts', models.BooleanField(blank=True, null=True)),
                ('period_lock_date', models.DateField(blank=True, null=True)),
                ('paypal_account', models.CharField(blank=True, max_length=128, null=True)),
                ('accounts_code_digits', models.IntegerField(blank=True, null=True)),
                ('overdue_msg', models.TextField(blank=True, null=True)),
                ('fiscalyear_last_month', models.IntegerField()),
                ('tax_calculation_rounding_method', models.CharField(blank=True, max_length=5, null=True)),
                ('localization', models.CharField(blank=True, max_length=5, null=True)),
                ('sale_note', models.TextField(blank=True, null=True)),
                ('propagation_minimum_delta', models.IntegerField(blank=True, null=True)),
                ('po_lead', models.FloatField()),
                ('po_double_validation_amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('po_double_validation', models.CharField(blank=True, max_length=20, null=True)),
                ('security_lead', models.FloatField()),
                ('report_company_name', models.CharField(blank=True, max_length=20, null=True)),
                ('internal_notes', models.BooleanField(blank=True, null=True)),
                ('external_notes', models.BooleanField(blank=True, null=True)),
                ('double_validation', models.BooleanField(blank=True, null=True)),
                ('afip_auth_verify_type', models.CharField(max_length=20)),
                ('sale_allow_vat_no_discrimination', models.CharField(blank=True, max_length=20, null=True)),
                ('automatic_declare_value', models.BooleanField(blank=True, null=True)),
                ('restrict_number_package', models.BooleanField(blank=True, null=True)),
                ('auto_currency_up', models.BooleanField(blank=True, null=True)),
                ('automatic_withholdings', models.BooleanField(blank=True, null=True)),
                ('arba_cit', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'res_company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCompanyTablaGananciasRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_company_tabla_ganancias_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCompanyUsersRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_company_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResConfigInstaller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_config_installer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=2, null=True, unique=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('address_format', models.TextField(blank=True, null=True)),
                ('phone_code', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('cuit_otro', models.CharField(blank=True, max_length=11, null=True)),
                ('afip_code', models.CharField(blank=True, max_length=3, null=True)),
                ('cuit_fisica', models.CharField(blank=True, max_length=11, null=True)),
                ('cuit_juridica', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'db_table': 'res_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_country_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryGroupWebsitePricelistRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_country_group_website_pricelist_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryResCountryGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_country_res_country_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('afip_code', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'res_country_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryStateResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_country_state_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCurrency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('rounding', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('symbol', models.CharField(blank=True, max_length=4, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=20, null=True)),
                ('afip_code', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'db_table': 'res_currency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCurrencyAutoUpdateRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_currency_auto_update_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCurrencyRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.DateTimeField()),
                ('rate', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_currency_rate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCurrencyUpdateAvailRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_currency_update_avail_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResFont',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('family', models.CharField(max_length=20)),
                ('mode', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('path', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'res_font',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('share', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('is_portal', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsActionRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_groups_action_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsImpliedRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_groups_implied_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsReportRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_groups_report_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsUsersRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_groups_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('code', models.CharField(max_length=16, unique=True)),
                ('date_format', models.CharField(max_length=20)),
                ('direction', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('thousands_sep', models.CharField(blank=True, max_length=20, null=True)),
                ('translatable', models.BooleanField(blank=True, null=True)),
                ('time_format', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('decimal_point', models.CharField(max_length=20)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('iso_code', models.CharField(blank=True, max_length=16, null=True)),
                ('grouping', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'res_lang',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_calendar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCalendarAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofweek', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('hour_from', models.FloatField()),
                ('hour_to', models.FloatField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_calendar_attendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCalendarLeaves',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('date_from', models.DateTimeField()),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_to', models.DateTimeField()),
            ],
            options={
                'db_table': 'resource_calendar_leaves',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_efficiency', models.FloatField()),
                ('code', models.CharField(blank=True, max_length=16, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('resource_type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'resource_resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('function', models.CharField(blank=True, max_length=5, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('company_type', models.CharField(blank=True, max_length=5, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('street', models.CharField(blank=True, max_length=30, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('display_name', models.CharField(blank=True, max_length=20, null=True)),
                ('zip', models.CharField(blank=True, max_length=24, null=True)),
                ('supplier', models.BooleanField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.CharField(blank=True, max_length=20, null=True)),
                ('is_company', models.BooleanField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=20, null=True)),
                ('customer', models.BooleanField(blank=True, null=True)),
                ('fax', models.CharField(blank=True, max_length=10, null=True)),
                ('street2', models.CharField(blank=True, max_length=30, null=True)),
                ('barcode', models.CharField(blank=True, max_length=30, null=True)),
                ('employee', models.BooleanField(blank=True, null=True)),
                ('credit_limit', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('tz', models.CharField(blank=True, max_length=64, null=True)),
                ('lang', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('mobile', models.CharField(blank=True, max_length=10, null=True)),
                ('type', models.CharField(blank=True, max_length=5, null=True)),
                ('use_parent_address', models.BooleanField(blank=True, null=True)),
                ('birthdate', models.CharField(blank=True, max_length=10, null=True)),
                ('vat', models.CharField(blank=True, max_length=10, null=True)),
                ('notify_email', models.CharField(max_length=20)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('opt_out', models.BooleanField(blank=True, null=True)),
                ('signup_type', models.CharField(blank=True, max_length=5, null=True)),
                ('signup_expiration', models.DateTimeField(blank=True, null=True)),
                ('signup_token', models.CharField(blank=True, max_length=5, null=True)),
                ('last_time_entries_checked', models.DateTimeField(blank=True, null=True)),
                ('debit_limit', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('main_id_number', models.CharField(blank=True, max_length=10, null=True)),
                ('imp_ganancias_padron', models.CharField(blank=True, max_length=10, null=True)),
                ('gross_income_type', models.CharField(blank=True, max_length=10, null=True)),
                ('gross_income_number', models.CharField(blank=True, max_length=64, null=True)),
                ('actividad_monotributo_padron', models.CharField(blank=True, max_length=10, null=True)),
                ('integrante_soc_padron', models.CharField(blank=True, max_length=10, null=True)),
                ('last_update_padron', models.DateField(blank=True, null=True)),
                ('estado_padron', models.CharField(blank=True, max_length=10, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('monotributo_padron', models.CharField(blank=True, max_length=10, null=True)),
                ('imp_iva_padron', models.CharField(blank=True, max_length=10, null=True)),
                ('empleador_padron', models.BooleanField(blank=True, null=True)),
                ('calendar_last_notif_ack', models.DateTimeField(blank=True, null=True)),
                ('x_td_visa', models.CharField(blank=True, max_length=16, null=True)),
                ('x_tc_visa', models.CharField(blank=True, max_length=16, null=True)),
                ('x_tc_master', models.CharField(blank=True, max_length=16, null=True)),
                ('x_cbu', models.CharField(blank=True, max_length=22, null=True)),
                ('drei', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'res_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerAfipActivityRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_partner_afip_activity_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerAfipTaxRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_partner_afip_tax_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerArbaAlicuot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_comprobante', models.CharField(blank=True, max_length=20, null=True)),
                ('grupo_retencion', models.CharField(blank=True, max_length=20, null=True)),
                ('codigo_hash', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('grupo_percepcion', models.CharField(blank=True, max_length=20, null=True)),
                ('alicuota_retencion', models.FloatField(blank=True, null=True)),
                ('alicuota_percepcion', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_arba_alicuot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('sanitized_acc_number', models.CharField(blank=True, max_length=20, null=True)),
                ('acc_number', models.CharField(max_length=20)),
                ('cbu', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'res_partner_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerDocumentTypeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_partner_document_type_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerIdCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('validation_code', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField()),
                ('afip_code', models.IntegerField()),
            ],
            options={
                'db_table': 'res_partner_id_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerIdNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('date_issued', models.DateField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('place_issuance', models.CharField(blank=True, max_length=20, null=True)),
                ('sequence', models.IntegerField()),
            ],
            options={
                'db_table': 'res_partner_id_number',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerResPartnerCategoryRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_partner_res_partner_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('shortcut', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_title',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerUpdateFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_partner_update_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerUpdateFromPadronField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('old_value', models.CharField(blank=True, max_length=20, null=True)),
                ('field', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('new_value', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'res_partner_update_from_padron_field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerUpdateFromPadronWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('update_constancia', models.BooleanField(blank=True, null=True)),
                ('title_case', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_update_from_padron_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResRequestLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('object', models.CharField(max_length=20)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_request_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('login', models.CharField(max_length=64, unique=True)),
                ('password', models.CharField(blank=True, max_length=15, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('share', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
                ('password_crypt', models.CharField(blank=True, max_length=15, null=True)),
                ('chatter_needaction_auto', models.BooleanField(blank=True, null=True)),
                ('target_sales_done', models.IntegerField(blank=True, null=True)),
                ('target_sales_won', models.IntegerField(blank=True, null=True)),
                ('target_sales_invoiced', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsersLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsersWebTipRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_users_web_tip_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RuleGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'rule_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleAdvancePaymentInv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('advance_payment_method', models.CharField(max_length=20)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_advance_payment_inv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('group_multiple_id_numbers', models.BooleanField(blank=True, null=True)),
                ('unique_id_numbers', models.BooleanField(blank=True, null=True)),
                ('auto_done_setting', models.IntegerField(blank=True, null=True)),
                ('group_display_incoterm', models.IntegerField(blank=True, null=True)),
                ('group_pricelist_item', models.BooleanField(blank=True, null=True)),
                ('group_product_variant', models.IntegerField(blank=True, null=True)),
                ('group_sale_pricelist', models.BooleanField(blank=True, null=True)),
                ('default_invoice_policy', models.CharField(blank=True, max_length=20, null=True)),
                ('group_product_pricelist', models.BooleanField(blank=True, null=True)),
                ('module_website_portal', models.BooleanField(blank=True, null=True)),
                ('module_website_quote', models.IntegerField(blank=True, null=True)),
                ('group_discount_per_so_line', models.IntegerField(blank=True, null=True)),
                ('module_sale_margin', models.IntegerField(blank=True, null=True)),
                ('sale_pricelist_setting', models.CharField(max_length=20)),
                ('module_website_sale_digital', models.BooleanField(blank=True, null=True)),
                ('group_uom', models.IntegerField(blank=True, null=True)),
                ('group_sale_delivery_address', models.IntegerField(blank=True, null=True)),
                ('module_sale_contract', models.BooleanField(blank=True, null=True)),
                ('module_crm_voip', models.BooleanField(blank=True, null=True)),
                ('alias_domain', models.CharField(blank=True, max_length=20, null=True)),
                ('module_website_sign', models.BooleanField(blank=True, null=True)),
                ('generate_sales_team_alias', models.BooleanField(blank=True, null=True)),
                ('group_use_lead', models.IntegerField(blank=True, null=True)),
                ('alias_prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('module_delivery', models.IntegerField(blank=True, null=True)),
                ('group_mrp_properties', models.IntegerField(blank=True, null=True)),
                ('group_route_so_lines', models.IntegerField(blank=True, null=True)),
                ('default_picking_policy', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('client_order_ref', models.CharField(blank=True, max_length=20, null=True)),
                ('date_order', models.DateTimeField()),
                ('amount_untaxed', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('amount_tax', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('validity_date', models.DateField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('invoice_status', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=20)),
                ('picking_policy', models.CharField(blank=True, max_length=20, null=True)),
                ('internal_notes', models.TextField(blank=True, null=True)),
                ('delivery_price', models.FloatField(blank=True, null=True)),
                ('invoice_shipping_on_delivery', models.BooleanField(blank=True, null=True)),
                ('todopago_max_insallments', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('qty_to_invoice', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('price_unit', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('product_uom_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('qty_invoiced', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_tax', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('customer_lead', models.FloatField()),
                ('name', models.TextField()),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('price_subtotal', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('price_reduce', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('qty_delivered', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('price_total', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('invoice_status', models.CharField(blank=True, max_length=20, null=True)),
                ('is_delivery', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sale_order_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderLineInvoiceRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'sale_order_line_invoice_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderTagRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'sale_order_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockBackorderConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_backorder_confirmation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('lines_per_voucher', models.IntegerField()),
            ],
            options={
                'db_table': 'stock_book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockChangeProductQty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('new_quantity', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'stock_change_product_qty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockChangeStandardPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('new_price', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_change_standard_price',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('module_stock_calendar', models.IntegerField(blank=True, null=True)),
                ('group_stock_multiple_locations', models.IntegerField(blank=True, null=True)),
                ('module_stock_picking_wave', models.IntegerField(blank=True, null=True)),
                ('group_stock_tracking_lot', models.IntegerField(blank=True, null=True)),
                ('group_product_variant', models.IntegerField(blank=True, null=True)),
                ('module_claim_from_delivery', models.IntegerField(blank=True, null=True)),
                ('module_stock_barcode', models.BooleanField(blank=True, null=True)),
                ('group_stock_production_lot', models.IntegerField(blank=True, null=True)),
                ('group_stock_tracking_owner', models.IntegerField(blank=True, null=True)),
                ('module_delivery_usps', models.BooleanField(blank=True, null=True)),
                ('module_stock_dropshipping', models.IntegerField(blank=True, null=True)),
                ('module_procurement_jit', models.IntegerField(blank=True, null=True)),
                ('group_stock_packaging', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('module_delivery_fedex', models.BooleanField(blank=True, null=True)),
                ('decimal_precision', models.IntegerField(blank=True, null=True)),
                ('group_uom', models.IntegerField(blank=True, null=True)),
                ('module_delivery_ups', models.BooleanField(blank=True, null=True)),
                ('module_product_expiry', models.IntegerField(blank=True, null=True)),
                ('group_stock_adv_location', models.IntegerField(blank=True, null=True)),
                ('module_delivery_dhl', models.BooleanField(blank=True, null=True)),
                ('module_stock_landed_costs', models.IntegerField(blank=True, null=True)),
                ('group_stock_inventory_valuation', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockFixedPutawayStrat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_fixed_putaway_strat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockImmediateTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_immediate_transfer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockIncoterms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_incoterms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('filter', models.CharField(max_length=20)),
                ('accounting_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockInventoryLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('prodlot_name', models.CharField(blank=True, max_length=20, null=True)),
                ('product_name', models.CharField(blank=True, max_length=20, null=True)),
                ('location_name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('product_qty', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('theoretical_qty', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('product_code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'stock_inventory_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('scrap_location', models.BooleanField(blank=True, null=True)),
                ('complete_name', models.CharField(blank=True, max_length=20, null=True)),
                ('usage', models.CharField(max_length=20)),
                ('barcode', models.CharField(blank=True, max_length=20, null=True)),
                ('posz', models.IntegerField(blank=True, null=True)),
                ('posx', models.IntegerField(blank=True, null=True)),
                ('posy', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('return_location', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationPath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_sequence', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('auto', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('delay', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('propagate', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_location_path',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationRoute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('warehouse_selectable', models.BooleanField(blank=True, null=True)),
                ('product_selectable', models.BooleanField(blank=True, null=True)),
                ('product_categ_selectable', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sale_selectable', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_location_route',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationRouteCateg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'stock_location_route_categ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationRouteMove',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'stock_location_route_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockLocationRouteProcurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'stock_location_route_procurement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockMove',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('price_unit', models.FloatField(blank=True, null=True)),
                ('product_uom_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('date', models.DateTimeField()),
                ('product_qty', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('priority', models.CharField(blank=True, max_length=20, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('date_expected', models.DateTimeField()),
                ('name', models.CharField(max_length=20)),
                ('partially_available', models.BooleanField(blank=True, null=True)),
                ('propagate', models.BooleanField(blank=True, null=True)),
                ('procure_method', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'stock_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockMoveOperationLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('qty', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_move_operation_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockMoveScrap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('product_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'stock_move_scrap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPackOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('product_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('qty_done', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('fresh_record', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'stock_pack_operation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPackOperationLot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('lot_name', models.CharField(blank=True, max_length=20, null=True)),
                ('qty_todo', models.FloatField(blank=True, null=True)),
                ('qty', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_pack_operation_lot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPicking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=20, null=True)),
                ('date_done', models.DateTimeField(blank=True, null=True)),
                ('launch_pack_operations', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(max_length=20)),
                ('move_type', models.CharField(max_length=20)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('min_date', models.DateTimeField(blank=True, null=True)),
                ('printed', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('recompute_pack_op', models.BooleanField(blank=True, null=True)),
                ('max_date', models.DateTimeField(blank=True, null=True)),
                ('carrier_tracking_ref', models.CharField(blank=True, max_length=20, null=True)),
                ('number_of_packages', models.IntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('carrier_price', models.FloatField(blank=True, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('declared_value', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'stock_picking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPickingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('use_create_lots', models.BooleanField(blank=True, null=True)),
                ('show_entire_packs', models.BooleanField(blank=True, null=True)),
                ('use_existing_lots', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('book_required', models.BooleanField(blank=True, null=True)),
                ('voucher_number_unique', models.BooleanField(blank=True, null=True)),
                ('voucher_required', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_picking_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPickingVoucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_picking_voucher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockPrintStockVoucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_number_of_pages', models.IntegerField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_print_stock_voucher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockProductionLot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'stock_production_lot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockQuant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('qty', models.FloatField()),
                ('in_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_quant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockQuantMoveRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'stock_quant_move_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockQuantPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_quant_package',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockReturnPicking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_dest_exists', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_return_picking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockReturnPickingLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'stock_return_picking_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockRouteProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'stock_route_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockRouteWarehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'stock_route_warehouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockWarehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(max_length=5)),
                ('delivery_steps', models.CharField(max_length=20)),
                ('reception_steps', models.CharField(max_length=20)),
                ('resupply_from_wh', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('buy_to_resupply', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_warehouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockWarehouseOrderpoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_max_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('qty_multiple', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('lead_type', models.CharField(max_length=20)),
                ('product_min_qty', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('lead_days', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_warehouse_orderpoint',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockWhResupplyTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'stock_wh_resupply_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('quizz_mark', models.FloatField(blank=True, null=True)),
                ('value', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'survey_label',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyMailComposeMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('no_auto_thread', models.BooleanField(blank=True, null=True)),
                ('notify', models.BooleanField(blank=True, null=True)),
                ('email_from', models.CharField(blank=True, max_length=20, null=True)),
                ('active_domain', models.TextField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=20, null=True)),
                ('composition_mode', models.CharField(blank=True, max_length=20, null=True)),
                ('multi_email', models.TextField(blank=True, null=True)),
                ('is_log', models.BooleanField(blank=True, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=20, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('record_name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('use_active_domain', models.BooleanField(blank=True, null=True)),
                ('date_deadline', models.DateField(blank=True, null=True)),
                ('public', models.CharField(max_length=20)),
                ('reply_to', models.CharField(blank=True, max_length=20, null=True)),
                ('message_type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'survey_mail_compose_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyMailComposeMessageIrAttachmentsRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'survey_mail_compose_message_ir_attachments_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyMailComposeMessageResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'survey_mail_compose_message_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'survey_page',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('constr_error_msg', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('matrix_subtype', models.CharField(blank=True, max_length=20, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('comments_allowed', models.BooleanField(blank=True, null=True)),
                ('validation_min_float_value', models.FloatField(blank=True, null=True)),
                ('constr_mandatory', models.BooleanField(blank=True, null=True)),
                ('column_nb', models.CharField(blank=True, max_length=20, null=True)),
                ('validation_required', models.BooleanField(blank=True, null=True)),
                ('validation_length_max', models.IntegerField(blank=True, null=True)),
                ('validation_length_min', models.IntegerField(blank=True, null=True)),
                ('question', models.CharField(max_length=20)),
                ('display_mode', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=15)),
                ('validation_min_date', models.DateTimeField(blank=True, null=True)),
                ('comments_message', models.CharField(blank=True, max_length=20, null=True)),
                ('validation_email', models.BooleanField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('comment_count_as_answer', models.BooleanField(blank=True, null=True)),
                ('validation_max_float_value', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('validation_max_date', models.DateTimeField(blank=True, null=True)),
                ('validation_error_msg', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'survey_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('fold', models.BooleanField(blank=True, null=True)),
                ('closed', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'survey_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveySurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('thank_you_message', models.TextField(blank=True, null=True)),
                ('quizz_mode', models.BooleanField(blank=True, null=True)),
                ('users_can_go_back', models.BooleanField(blank=True, null=True)),
                ('auth_required', models.BooleanField(blank=True, null=True)),
                ('message_last_post', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'survey_survey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyUserInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('date_create', models.DateTimeField()),
                ('email', models.CharField(blank=True, max_length=20, null=True)),
                ('token', models.CharField(max_length=20, unique=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
                ('test_entry', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'survey_user_input',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyUserInputLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_date', models.DateTimeField(blank=True, null=True)),
                ('skipped', models.BooleanField(blank=True, null=True)),
                ('answer_type', models.CharField(blank=True, max_length=20, null=True)),
                ('value_text', models.CharField(blank=True, max_length=20, null=True)),
                ('quizz_mark', models.FloatField(blank=True, null=True)),
                ('date_create', models.DateTimeField()),
                ('value_number', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('value_free_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'survey_user_input_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmCampaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_campaign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmMedium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_medium',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ValidateAccountMove',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'validate_account_move',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebEditorConverterTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binary', models.BinaryField(blank=True, null=True)),
                ('selection', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('float', models.FloatField(blank=True, null=True)),
                ('numeric', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('char', models.CharField(blank=True, max_length=20, null=True)),
                ('html', models.TextField(blank=True, null=True)),
                ('selection_str', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('integer', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'web_editor_converter_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebEditorConverterTestSub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'web_editor_converter_test_sub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebPlanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('planner_application', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('progress', models.IntegerField(blank=True, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('tooltip_planner', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'web_planner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('social_linkedin', models.CharField(blank=True, max_length=20, null=True)),
                ('cdn_filters', models.TextField(blank=True, null=True)),
                ('social_facebook', models.CharField(blank=True, max_length=20, null=True)),
                ('google_analytics_key', models.CharField(blank=True, max_length=20, null=True)),
                ('social_twitter', models.CharField(blank=True, max_length=20, null=True)),
                ('cdn_url', models.CharField(blank=True, max_length=20, null=True)),
                ('default_lang_code', models.CharField(blank=True, max_length=20, null=True)),
                ('social_googleplus', models.CharField(blank=True, max_length=20, null=True)),
                ('social_github', models.CharField(blank=True, max_length=20, null=True)),
                ('compress_html', models.BooleanField(blank=True, null=True)),
                ('social_youtube', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('cdn_activated', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'website',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebsiteConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('module_website_version', models.BooleanField(blank=True, null=True)),
                ('module_website_form_editor', models.BooleanField(blank=True, null=True)),
                ('module_delivery_usps', models.BooleanField(blank=True, null=True)),
                ('module_delivery_fedex', models.BooleanField(blank=True, null=True)),
                ('module_delivery_ups', models.BooleanField(blank=True, null=True)),
                ('module_sale_ebay', models.BooleanField(blank=True, null=True)),
                ('module_delivery_dhl', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'website_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebsiteLangRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'website_lang_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebsiteMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=20, null=True)),
                ('new_window', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'website_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebsitePricelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('selectable', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'website_pricelist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebsiteSeoMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('website_meta_description', models.TextField(blank=True, null=True)),
                ('website_meta_title', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('website_meta_keywords', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'website_seo_metadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebTip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placement', models.CharField(blank=True, max_length=20, null=True)),
                ('end_selector', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('description', models.TextField()),
                ('end_event', models.CharField(blank=True, max_length=20, null=True)),
                ('mode', models.CharField(blank=True, max_length=20, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('trigger_selector', models.CharField(blank=True, max_length=20, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('highlight_selector', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'web_tip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WizardIrModelMenuCreate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wizard_ir_model_menu_create',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WizardMultiChartsAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('only_one_chart_template', models.BooleanField(blank=True, null=True)),
                ('bank_account_code_prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('cash_account_code_prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('code_digits', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('complete_tax_set', models.BooleanField(blank=True, null=True)),
                ('purchase_tax_rate', models.FloatField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('sale_tax_rate', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wizard_multi_charts_accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WizardValuationHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('choose_date', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wizard_valuation_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wkf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('osv', models.CharField(max_length=20)),
                ('on_create', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wkf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WkfActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(max_length=20)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('join_mode', models.CharField(max_length=3)),
                ('flow_stop', models.BooleanField(blank=True, null=True)),
                ('split_mode', models.CharField(max_length=3)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('action', models.TextField(blank=True, null=True)),
                ('signal_send', models.CharField(blank=True, max_length=20, null=True)),
                ('flow_start', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wkf_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WkfInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_type', models.CharField(blank=True, max_length=20, null=True)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=10, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wkf_instance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WkfTransition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('trigger_model', models.CharField(blank=True, max_length=20, null=True)),
                ('signal', models.CharField(blank=True, max_length=20, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('condition', models.CharField(max_length=20)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('trigger_expr_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'wkf_transition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WkfTriggers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wkf_triggers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WkfWitmTrans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'wkf_witm_trans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WkfWorkitem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'wkf_workitem',
                'managed': False,
            },
        ),
    ]
